{"version":3,"sources":["node_modules/typed-html/dist/elements.js","node_modules/shuffle-array/index.js","index.js"],"names":["capitalACharCode","charCodeAt","capitalZCharCode","isUpper","input","index","charCode","toKebabCase","camelCased","kebabCased","i","length","prevUpperCased","currentUpperCased","nextUpperCased","toLowerCase","escapeAttrNodeValue","value","replace","_","amp","quote","attributeToString","attributes","name","formattedName","makeAttribute","Date","toISOString","toString","attributesToString","Object","keys","map","filter","attribute","join","contentsToString","contents","elements","Array","isArray","isVoidElement","tagName","indexOf","createElement","__importDefault","mod","__esModule","defineProperty","exports","typed_html_1","require","shuffle_array_1","document","addEventListener","icons","default","tbody","getElementById","slice","icon","innerHTML","class"],"mappings":"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","file":"words.642d309d.js","sourceRoot":"..","sourcesContent":["/// <reference path=\"./jsx/element-types.d.ts\" />\r\n/// <reference path=\"./jsx/events.d.ts\" />\r\n/// <reference path=\"./jsx/intrinsic-elements.d.ts\" />\r\nconst capitalACharCode = 'A'.charCodeAt(0);\r\nconst capitalZCharCode = 'Z'.charCodeAt(0);\r\nconst isUpper = (input, index) => {\r\n    const charCode = input.charCodeAt(index);\r\n    return capitalACharCode <= charCode && capitalZCharCode >= charCode;\r\n};\r\nconst toKebabCase = (camelCased) => {\r\n    let kebabCased = '';\r\n    for (let i = 0; i < camelCased.length; i++) {\r\n        const prevUpperCased = i > 0 ? isUpper(camelCased, i - 1) : true;\r\n        const currentUpperCased = isUpper(camelCased, i);\r\n        const nextUpperCased = i < camelCased.length - 1 ? isUpper(camelCased, i + 1) : true;\r\n        if (!prevUpperCased && currentUpperCased || currentUpperCased && !nextUpperCased) {\r\n            kebabCased += '-';\r\n            kebabCased += camelCased[i].toLowerCase();\r\n        }\r\n        else {\r\n            kebabCased += camelCased[i];\r\n        }\r\n    }\r\n    return kebabCased;\r\n};\r\nconst escapeAttrNodeValue = (value) => {\r\n    return value.replace(/(&)|(\")|(\\u00A0)/g, function (_, amp, quote) {\r\n        if (amp)\r\n            return '&amp;';\r\n        if (quote)\r\n            return '&quot;';\r\n        return '&nbsp;';\r\n    });\r\n};\r\nconst attributeToString = (attributes) => (name) => {\r\n    const value = attributes[name];\r\n    const formattedName = toKebabCase(name);\r\n    const makeAttribute = (value) => `${formattedName}=\"${value}\"`;\r\n    if (value instanceof Date) {\r\n        return makeAttribute(value.toISOString());\r\n    }\r\n    else\r\n        switch (typeof value) {\r\n            case 'boolean':\r\n                // https://www.w3.org/TR/2008/WD-html5-20080610/semantics.html#boolean\r\n                if (value) {\r\n                    return formattedName;\r\n                }\r\n                else {\r\n                    return '';\r\n                }\r\n            default:\r\n                return makeAttribute(escapeAttrNodeValue(value.toString()));\r\n        }\r\n};\r\nconst attributesToString = (attributes) => {\r\n    if (attributes) {\r\n        return ' ' + Object.keys(attributes)\r\n            .map(attributeToString(attributes))\r\n            .filter(attribute => attribute.length) // filter out negative boolean attributes\r\n            .join(' ');\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n};\r\nconst contentsToString = (contents) => {\r\n    if (contents) {\r\n        return contents\r\n            .map(elements => Array.isArray(elements) ? elements.join('\\n') : elements)\r\n            .join('\\n');\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n};\r\nconst isVoidElement = (tagName) => {\r\n    return [\r\n        'area',\r\n        'base',\r\n        'br',\r\n        'col',\r\n        'command',\r\n        'embed',\r\n        'hr',\r\n        'img',\r\n        'input',\r\n        'keygen',\r\n        'link',\r\n        'meta',\r\n        'param',\r\n        'source',\r\n        'track',\r\n        'wbr'\r\n    ].indexOf(tagName) > -1;\r\n};\r\nexport function createElement(name, attributes, ...contents) {\r\n    if (typeof name === 'function') {\r\n        return name(attributes, contents);\r\n    }\r\n    else {\r\n        const tagName = toKebabCase(name);\r\n        if (isVoidElement(tagName) && !contents.length) {\r\n            return `<${tagName}${attributesToString(attributes)}>`;\r\n        }\r\n        else {\r\n            return `<${tagName}${attributesToString(attributes)}>${contentsToString(contents)}</${tagName}>`;\r\n        }\r\n    }\r\n}\r\n","'use strict';\n\n/**\n * Randomize the order of the elements in a given array.\n * @param {Array} arr - The given array.\n * @param {Object} [options] - Optional configuration options.\n * @param {Boolean} [options.copy] - Sets if should return a shuffled copy of the given array. By default it's a falsy value.\n * @param {Function} [options.rng] - Specifies a custom random number generator.\n * @returns {Array}\n */\nfunction shuffle(arr, options) {\n\n  if (!Array.isArray(arr)) {\n    throw new Error('shuffle expect an array as parameter.');\n  }\n\n  options = options || {};\n\n  var collection = arr,\n      len = arr.length,\n      rng = options.rng || Math.random,\n      random,\n      temp;\n\n  if (options.copy === true) {\n    collection = arr.slice();\n  }\n\n  while (len) {\n    random = Math.floor(rng() * len);\n    len -= 1;\n    temp = collection[len];\n    collection[len] = collection[random];\n    collection[random] = temp;\n  }\n\n  return collection;\n};\n\n/**\n * Pick one or more random elements from the given array.\n * @param {Array} arr - The given array.\n * @param {Object} [options] - Optional configuration options.\n * @param {Number} [options.picks] - Specifies how many random elements you want to pick. By default it picks 1.\n * @param {Function} [options.rng] - Specifies a custom random number generator.\n * @returns {Object}\n */\nshuffle.pick = function(arr, options) {\n\n  if (!Array.isArray(arr)) {\n    throw new Error('shuffle.pick() expect an array as parameter.');\n  }\n\n  options = options || {};\n\n  var rng = options.rng || Math.random,\n      picks = options.picks || 1;\n\n  if (typeof picks === 'number' && picks !== 1) {\n    var len = arr.length,\n        collection = arr.slice(),\n        random = [],\n        index;\n\n    while (picks && len) {\n      index = Math.floor(rng() * len);\n      random.push(collection[index]);\n      collection.splice(index, 1);\n      len -= 1;\n      picks -= 1;\n    }\n\n    return random;\n  }\n\n  return arr[Math.floor(rng() * arr.length)];\n};\n\n/**\n * Expose\n */\nmodule.exports = shuffle;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @jsx createElement */\nconst typed_html_1 = require(\"typed-html\");\nconst shuffle_array_1 = __importDefault(require(\"shuffle-array\"));\ndocument.addEventListener('DOMContentLoaded', () => {\n    const icons = shuffle_array_1.default([\n        'dog',\n        'cat',\n        'ambulance',\n        'apple-alt',\n        'baby',\n        'baby-carriage',\n        'band-aid',\n        'battery-full',\n        'bed',\n        'beer',\n        'bell',\n        'bicycle',\n        'birthday-cake',\n        'bolt',\n        'bomb',\n        'bone',\n        'book',\n        'box-open',\n        'bread-slice',\n        'briefcase',\n        'bug',\n        'building',\n        'bus',\n        'camera',\n        'campground',\n        'car',\n        'carrot',\n        'chair',\n        'child',\n        'clock',\n        'coffee',\n        'couch',\n        'crow',\n        'crown',\n        'cut',\n        'dice-six',\n        'egg',\n        'eye',\n        'faucet',\n        'fighter-jet',\n        'fish',\n        'flag',\n        'frog',\n        'fun',\n        'gem',\n        'guitar',\n        'hamburger'\n    ]);\n    const tbody = document.getElementById('tbody');\n    for (const icon of icons.slice(0, 10)) {\n        tbody.innerHTML += typed_html_1.createElement(\"tr\", null,\n            typed_html_1.createElement(\"td\", null,\n                typed_html_1.createElement(\"i\", { class: `fas fa-${icon}` })),\n            typed_html_1.createElement(\"td\", null));\n    }\n});\n"]}